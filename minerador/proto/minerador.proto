syntax = "proto3";

package minerador;

service Minerador {
  rpc getTransactionID(Empty) returns (TransactionIDResponse);
  rpc getChallenge(TransactionRequest) returns (ChallengeResponse);
  rpc getTransactionStatus(TransactionRequest) returns (StatusResponse);
  rpc submitChallenge(SubmitRequest) returns (SubmitResponse);
  rpc getWinner(TransactionRequest) returns (WinnerResponse);
  rpc getSolution(TransactionRequest) returns (SolutionResponse);
}

message Empty {}

message TransactionRequest {
  int32 transactionID = 1;
}

message TransactionIDResponse {
  int32 transactionID = 1;
}

message ChallengeResponse {
  int32 challenge = 1;
}

message StatusResponse {
  // 0: resolvido, 1: pendente, -1: inválido
  int32 status = 1;
}

message SubmitRequest {
  int32 transactionID = 1;
  int32 clientID = 2;
  string solution = 3;
}

message SubmitResponse {
  // 1: válida, 0: inválida, 2: já solucionado, -1: transactionID inválida
  int32 result_code = 1;
}

message WinnerResponse {
  // clientID do vencedor, 0 se não houver, -1 se inválida
  int32 winnerID = 1;
}

message SolutionResponse {
  StatusResponse status = 1;
  string solution = 2;
  int32 challenge = 3;
}